import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class ClienteJogador2 extends javax.swing.JFrame {

    private boolean jogoTerminado = false;
    private boolean conectado = false;

    /**
     * Creates new form ClienteJogador2
     */
    public ClienteJogador2() {
        initComponents();
        
        // Configurar obstáculos
        btnObstaculo1.setText("X");
        btnObstaculo1.setBackground(java.awt.Color.RED);
        btnObstaculo2.setText("X");
        btnObstaculo2.setBackground(java.awt.Color.RED);
        btnObstaculo3.setText("X");
        btnObstaculo3.setBackground(java.awt.Color.RED);
        
        // Configurar placar
        txtPlacarServidor.setText("0");
        txtPlacarJogador.setText("0");
        txtPlacarServidor.setEditable(false);
        txtPlacarJogador.setEditable(false);
        
        // Configurar campos de conexão com valores padrão
        txtIPServer.setText("localhost");
        txtPortServer.setText("12345");
        
        // Desabilitar movimento até conectar
        jButtonFruta.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelJogador2 = new javax.swing.JPanel();
        jButtonJogador1 = new javax.swing.JButton();
        jButtonFruta = new javax.swing.JButton();
        jButtonJogador2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPlacarServidor = new javax.swing.JTextField();
        txtPlacarJogador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIPServer = new javax.swing.JTextField();
        txtPortServer = new javax.swing.JTextField();
        btnConectar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnObstaculo1 = new javax.swing.JButton();
        btnObstaculo2 = new javax.swing.JButton();
        btnObstaculo3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogador 2 - CLIENTE");

        jButtonJogador1.setText("j1");
        jButtonJogador1.setFocusable(false);

        jButtonFruta.setBackground(new java.awt.Color(255, 204, 0));
        jButtonFruta.setText("@");
        jButtonFruta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonFrutaKeyPressed(evt);
            }
        });

        jButtonJogador2.setText("j2");
        jButtonJogador2.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("x");

        jLabel2.setText("Conexão");

        jLabel3.setText("ip:");

        jLabel4.setText("Port:");

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        jLabel5.setText("Placar");

        javax.swing.GroupLayout jPanelJogador2Layout = new javax.swing.GroupLayout(jPanelJogador2);
        jPanelJogador2.setLayout(jPanelJogador2Layout);
        jPanelJogador2Layout.setHorizontalGroup(
            jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(jLabel2))
                            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtIPServer))
                                        .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtPortServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnConectar)))
                                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(txtPlacarServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPlacarJogador, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel5)))))
                        .addGap(0, 100, Short.MAX_VALUE))
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonJogador1)
                            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(btnObstaculo1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJogador2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnObstaculo3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnObstaculo2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonJogador2)))
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButtonFruta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelJogador2Layout.setVerticalGroup(
            jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJogador2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIPServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPortServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConectar))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPlacarServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlacarJogador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonJogador1)
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnObstaculo1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnObstaculo2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelJogador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJogador2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButtonJogador2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJogador2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFruta)
                        .addGap(37, 37, 37)
                        .addComponent(btnObstaculo3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelJogador2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelJogador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFrutaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonFrutaKeyPressed
        if (jogoTerminado || !conectado) return;

        // APENAS enviar comando - NÃO mover nada localmente
        int comando = 0;
        switch (evt.getKeyCode()) {
            case 37: comando = 37; break;
            case 38: comando = 38; break;
            case 39: comando = 39; break;
            case 40: comando = 40; break;
        }
        
        if (comando != 0) {
            c = new Componente(comando, 0, 0, 0);
            c.tipo = Componente.JOGADOR;
            c.numeroObstaculo = 2;
            ComunicadorTCP.enviarComponente(saida, c);
        }
    }//GEN-LAST:event_jButtonFrutaKeyPressed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        if (conectado) {
            JOptionPane.showMessageDialog(this, "Já está conectado!");
            return;
        }
        
        String host = txtIPServer.getText().trim();
        String portText = txtPortServer.getText().trim();
        
        if (host.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite o IP do servidor!");
            return;
        }
        
        if (portText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite a porta do servidor!");
            return;
        }
        
        try {
            int porta = Integer.parseInt(portText);
            
            btnConectar.setEnabled(false);
            btnConectar.setText("Conectando...");
            
            new Thread() {
                @Override
                public void run() {
                    try {
                        socket_jogador1 = new Socket(host, porta);
                        
                        saida = new ObjectOutputStream(socket_jogador1.getOutputStream());
                        entrada = new ObjectInputStream(socket_jogador1.getInputStream());
                        
                        conectado = true;
                        
                        // Atualizar interface na thread principal
                        javax.swing.SwingUtilities.invokeLater(() -> {
                            btnConectar.setText("Conectado");
                            jButtonFruta.setEnabled(true);
                            jButtonFruta.requestFocus();
                            txtIPServer.setEditable(false);
                            txtPortServer.setEditable(false);
                            JOptionPane.showMessageDialog(ClienteJogador2.this, "Conectado com sucesso!");
                        });

                        while (true) {
                            c = ComunicadorTCP.receberComponente(entrada);
                            
                            if (c == null) continue;
                            
                            // Processar apenas estado completo ou game over
                            javax.swing.SwingUtilities.invokeLater(() -> {
                                if (c.tipo == Componente.ESTADO_COMPLETO) {
                                    // Aplicar TODAS as posições de uma vez
                                    jButtonJogador1.setBounds(c.jogador1X, c.jogador1Y, c.jogador1W, c.jogador1H);
                                    jButtonJogador2.setBounds(c.jogador2X, c.jogador2Y, c.jogador2W, c.jogador2H);
                                    jButtonFruta.setBounds(c.frutaX, c.frutaY, c.frutaW, c.frutaH);
                                    btnObstaculo1.setBounds(c.obs1X, c.obs1Y, c.obs1W, c.obs1H);
                                    btnObstaculo2.setBounds(c.obs2X, c.obs2Y, c.obs2W, c.obs2H);
                                    btnObstaculo3.setBounds(c.obs3X, c.obs3Y, c.obs3W, c.obs3H);
                                    
                                    // Atualizar placar
                                    txtPlacarServidor.setText(String.valueOf(c.pontuacaoJ1));
                                    txtPlacarJogador.setText(String.valueOf(c.pontuacaoJ2));
                                    
                                    // Verificar vitória
                                    if (c.pontuacaoJ1 >= 10) {
                                        jogoTerminado = true;
                                        JOptionPane.showMessageDialog(ClienteJogador2.this, "Jogador 1 venceu!");
                                    } else if (c.pontuacaoJ2 >= 10) {
                                        jogoTerminado = true;
                                        JOptionPane.showMessageDialog(ClienteJogador2.this, "Jogador 2 venceu!");
                                    }
                                } else if (c.tipo == Componente.GAME_OVER) {
                                    jogoTerminado = true;
                                    JOptionPane.showMessageDialog(ClienteJogador2.this, c.vencedor + " venceu!");
                                }
                            });
                        }
                    } catch (Exception e) {
                        System.out.println("Erro de conexão: " + e.getMessage());
                        
                        javax.swing.SwingUtilities.invokeLater(() -> {
                            conectado = false;
                            btnConectar.setEnabled(true);
                            btnConectar.setText("Conectar");
                            jButtonFruta.setEnabled(false);
                            txtIPServer.setEditable(true);
                            txtPortServer.setEditable(true);
                            JOptionPane.showMessageDialog(ClienteJogador2.this, 
                                "Erro ao conectar: " + e.getMessage());
                        });
                    }
                }
            }.start();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Porta deve ser um número!");
            btnConectar.setEnabled(true);
            btnConectar.setText("Conectar");
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteJogador2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteJogador2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteJogador2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteJogador2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteJogador2().setVisible(true);
            }
        });
    }

    Socket socket_jogador1;
    ObjectOutputStream saida;
    ObjectInputStream entrada;
    Componente c;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnObstaculo1;
    private javax.swing.JButton btnObstaculo2;
    private javax.swing.JButton btnObstaculo3;
    private javax.swing.JButton jButtonFruta;
    private javax.swing.JButton jButtonJogador1;
    private javax.swing.JButton jButtonJogador2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelJogador2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtIPServer;
    private javax.swing.JTextField txtPlacarJogador;
    private javax.swing.JTextField txtPlacarServidor;
    private javax.swing.JTextField txtPortServer;
    // End of variables declaration//GEN-END:variables
}
